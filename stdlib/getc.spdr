
%section data

wptr:
    %res 1
rptr:
    %res 1
kbd_flags:
    %res 1

%section text




%address 0x00ff
isr:
    pha
    phx
    in
    ldx wptr
    sta scan_buffer, x
    inx
    stx wptr
    plx
    pla
    rti

read_scancode:
    lda rptr
    cmp wptr
    jz  .no_code
    tax
    lda scan_buffer, x
    inx
    stx rptr
    ret
.no_code:
    lda #0
    ret


getc:
.loop:
    call read_scancode
    cmp #0
    jz  .loop
    cmp #SCAN_EXTENDED
    jz  .loop
    cmp #SCAN_RELEASE
    jz  .flip_release
    tax
    lda kbd_flags
    bit #KBD_RELEASE
    txa
    jnz .release_key
    cmp #SCAN_SHIFT
    jz  .shift_key

    tax
    lda kbd_flags
    bit #KBD_SHIFT
    txa
    jz  .no_shift
    or  #0x80
.no_shift:
    tax
    lda ascii_map, x
    cmp #'~'
    jz  .loop
    ret

.shift_key:
    lda kbd_flags
    or  #KBD_SHIFT
    sta kbd_flags
    jmp .loop
.release_key:
    cmp #SCAN_SHIFT
    jnz .flip_release
    lda kbd_flags
    and #~KBD_SHIFT
    sta kbd_flags
.flip_release:
    lda kbd_flags
    xor #KBD_RELEASE
    sta kbd_flags
    jmp .loop

message:
%byte "==========VISUAL"

%align 0x100
ascii_map:
%byte "~~~~~~~~~~~~~ `~"
%byte "~~~~~q1~~~zsaw2~"
%byte "~cxde43~~ vftr5~"
%byte "~nbhgy6~~~mju78~"
%byte "~,kio09~~./l;p-~"
%byte "~~'~[=~~~~", KEY_ENTER, "]~\~~"
%byte "~~~~~~", KEY_BSPC, "~~1~", KEY_LEFT, "7~~~"
%byte KEY_INSERT, KEY_DELETE, KEY_DOWN, "5", KEY_RIGHT, KEY_UP, KEY_ESC, "~~+3-*9~~"
ascii_map_shift:
%byte "~~~~~~~~~~~~~ `~"
%byte "~~~~~Q!~~~ZSAW@~"
%byte "~CXDE$#~~ VFTR%~"
%byte "~NBHGY^~~~MJU&*~"
%byte "~<KIO)(~~>?L:P_~"
%byte "~~", '"', "~{+~~~~", KEY_ENTER, "}~|~~"
%byte "~~~~~~", KEY_BSPC, "~~1~", KEY_LEFT, "7~~~"
%byte KEY_SHIFT_INSERT, KEY_DELETE, KEY_DOWN, "5", KEY_RIGHT, KEY_UP, KEY_ESC, "~~+3_*9~~"

