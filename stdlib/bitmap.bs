#ifndef BITMAP_BS
#define BITMAP_BS

#include <lcd/set_char.bs>
#include <lcd/cursor.bs>
#include <print/putc.bs>
#include <mem/set.bs>

#define CHARACTERS 8
#define CHARACTER_WORDS 4
#define CHARACTER_BYTES (CHARACTER_WORDS * 2)

#define CHAR_LOOKUP arr (0, 0, 0, 0, 0, 16, 16, 16, 16, 16, 32, 32, 32, 32, 32, 48, 48, 48, 48, 48)

#define BIT_LOOKUP arr (0b10000, 0b01000, 0b00100, 0b00010, 0b00001, 0b10000, 0b01000, 0b00100, 0b00010, 0b00001, 0b10000, 0b01000, 0b00100, 0b00010, 0b00001, 0b10000, 0b01000, 0b00100, 0b00010, 0b00001)

let bitmap;

set_pixel(x, y, value)
{
    let byte = CHAR_LOOKUP[x] + y;
    let bit = BIT_LOOKUP[x];

    if (value)
    {
        *(bitmap + byte) |= bit;
    }
    else
    {
        *(bitmap + byte) &= (~bit);
    }
}

render()
{
    bitmap = arr [CHARACTERS * CHARACTER_WORDS];
    for (let i = 0; i < CHARACTERS; i += 2)
    {
        putc(i);
    }
    cursor(1, 0);
    for (let i = 1; i < CHARACTERS; i += 2)
    {
        putc(i);
    }
}

redraw()
{
    let addr = bitmap;
    for (let i = 0; i < CHARACTERS; i += 1)
    {
        set_char(i, addr);
        addr += CHARACTER_BYTES;
    }
}

clear_screen()
{
    set(bitmap, 0, CHARACTERS * CHARACTER_WORDS);
}

#endif

